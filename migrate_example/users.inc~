<?php

class DrupalUsersMigration extends Migration {
  public function __construct($arguments) {
    parent::__construct($arguments);
    $this->description = t('Migrate Drupal users');
 
    $source_fields = array(
      'uid' => t('User ID'),
      'roles' => t('The set of roles assigned to a user.'),
    );
 
    $query = db_select(OLDBASE.'.users', 'u');
      $query->fields('u', array('uid', 'name', 'pass', 'mail', 'created', 'access', 'login', 'status', 'init'));
      $query->condition('u.name', array('admin', 'rgates'), 'NOT IN');
      $query->condition('u.uid', 0, '>');
      //$query->range(1,10);

      //var_dump(user_load('1')); die();
     

    $this->source = new MigrateSourceSQL($query, $source_fields);
    $this->destination = new MigrateDestinationUser();

    $this->map = new MigrateSQLMap($this->machineName,
      array(
        'uid' => array(
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'description' => 'D6 Unique User ID',
          'alias' => 'u',
        )
      ),
      MigrateDestinationUser::getKeySchema()
    );
 
    // Make the mappings
    $this->addFieldMapping('name', 'name')->dedupe('users', 'name');
    $this->addFieldMapping('pass', 'pass');
    $this->addFieldMapping('mail', 'mail')->dedupe('users', 'mail');
    $this->addFieldMapping('language')->defaultValue('');
    $this->addFieldMapping('theme')->defaultValue('');
    $this->addFieldMapping('signature')->defaultValue('');
    $this->addFieldMapping('signature_format')->defaultValue('filtered_html');
    $this->addFieldMapping('created', 'created');
    $this->addFieldMapping('access', 'access');
    $this->addFieldMapping('login', 'login');
    $this->addFieldMapping('status', 'status');
    $this->addFieldMapping('picture')->defaultValue(0);
    $this->addFieldMapping('init', 'init');
    $this->addFieldMapping('timezone')->defaultValue(NULL);
    $this->addFieldMapping('path')->issueGroup(t('DNM'));
    $this->addFieldMapping('pathauto_perform_alias')->defaultValue('1');
    $this->addFieldMapping('roles', 'roles');
    
  }

    public function complete($entity, stdClass $row) {
      // Reset password hash back to the source hash; when Migrate saves the user
      // entity after the prepare() method is complete, Drupal hashes the hash,
      // meaning we need to set it back to the original hash.
      // SEE: https://drupal.org/node/1349758
      db_update('users')
        ->fields(array('pass' => $row->pass))
        ->condition('uid', $entity->uid)
        ->execute();

      //Other fields
      $existing = user_load($entity->uid);

      $queryPBA = db_select(OLDBASE.'.field_data_field_primary_business_activity', 'pba');
      $queryPBA->addField('ttd', 'name', 'pbactivity');
      $queryPBA->leftJoin(OLDBASE.'.taxonomy_term_data', 'ttd', 'ttd.tid=pba.field_primary_business_activity_tid');
      $queryPBA->condition('pba.entity_type', 'user', '=');  
      $queryPBA->condition('pba.entity_id', $row->uid, '=');  
      $rowPBA=$queryPBA->execute()->fetchAll();

      $queryPN = db_select(OLDBASE.'.field_data_field_phone_number', 'phn');
      $queryPN->addField('phn', 'field_phone_number_value');
      $queryPN->condition('phn.entity_type', 'user', '='); 
      $queryPN->condition('phn.entity_id', $row->uid, '=');  
      $rowPN=$queryPN->execute()->fetchAll();

      $queryAO = db_select(OLDBASE.'.field_data_field_address_1', 'ao');
      $queryAO->addField('ao', 'field_address_1_value');
      $queryAO->condition('ao.entity_type', 'user', '='); 
      $queryAO->condition('ao.entity_id', $row->uid, '=');  
      $rowAO=$queryAO->execute()->fetchAll();

      $queryAT = db_select(OLDBASE.'.field_data_field_address_2', 'at');
      $queryAT->addField('at', 'field_address_2_value');
      $queryAT->condition('at.entity_type', 'user', '='); 
      $queryAT->condition('at.entity_id', $row->uid, '=');  
      $rowAT=$queryAT->execute()->fetchAll();

      $queryCT = db_select(OLDBASE.'.field_data_field_city', 'ct');
      $queryCT->addField('ct', 'field_city_value');
      $queryCT->condition('ct.entity_type', 'user', '='); 
      $queryCT->condition('ct.entity_id', $row->uid, '=');  
      $rowCT=$queryCT->execute()->fetchAll();

      $queryST = db_select(OLDBASE.'.field_data_field_state', 'st');
      $queryST->addField('st', 'field_state_value');
      $queryST->condition('st.entity_type', 'user', '='); 
      $queryST->condition('st.entity_id', $row->uid, '=');  
      $rowST=$queryST->execute()->fetchAll();

      $queryZPC = db_select(OLDBASE.'.field_data_field_zip_postal_code', 'zc');
      $queryZPC->addField('zc', 'field_zip_postal_code_value');
      $queryZPC->condition('zc.entity_type', 'user', '='); 
      $queryZPC->condition('zc.entity_id', $row->uid, '=');  
      $rowZPC=$queryZPC->execute()->fetchAll();

      $queryCR = db_select(OLDBASE.'.field_data_field_country_region_icw', 'cr');
      $queryCR->addField('cr', 'field_country_region_icw_value');
      $queryCR->condition('cr.entity_type', 'user', '='); 
      $queryCR->condition('cr.entity_id', $row->uid, '=');  
      $rowCR=$queryCR->execute()->fetchAll();

      $queryCM = db_select(OLDBASE.'.field_data_field_company', 'cm');
      $queryCM->addField('cm', 'field_company_value');
      $queryCM->condition('cm.entity_type', 'user', '='); 
      $queryCM->condition('cm.entity_id', $row->uid, '=');  
      $rowCM=$queryCM->execute()->fetchAll();

      $queryAUM = db_select(OLDBASE.'.field_data_field_assets_under_management', 'aum');
      $queryAUM->addField('ttd', 'name', 'aumanagement');
      $queryAUM->leftJoin(OLDBASE.'.taxonomy_term_data', 'ttd', 'ttd.tid=aum.field_assets_under_management_tid');
      $queryAUM->condition('aum.entity_type', 'user', '='); 
      $queryAUM->condition('aum.entity_id', $row->uid, '=');  
      $rowAUM=$queryAUM->execute()->fetchAll();

      $queryICS = db_select(OLDBASE.'.field_data_field_income_source', 'ics');
      $queryICS->addField('ttd', 'name', 'icsource');
      $queryICS->leftJoin(OLDBASE.'.taxonomy_term_data', 'ttd', 'ttd.tid=ics.field_income_source_tid');
      $queryICS->condition('ics.entity_type', 'user', '='); 
      $queryICS->condition('ics.entity_id', $row->uid, '=');  
      $rowICS=$queryICS->execute()->fetchAll();

      $queryHDH = db_select(OLDBASE.'.field_data_field_how_did_you_hear_about_the', 'hdh');
      $queryHDH->addField('ttd', 'name', 'hdhear');
      $queryHDH->leftJoin(OLDBASE.'.taxonomy_term_data', 'ttd', 'ttd.tid=hdh.field_how_did_you_hear_about_the_tid');
      $queryHDH->condition('hdh.entity_type', 'user', '='); 
      $queryHDH->condition('hdh.entity_id', $row->uid, '=');  
      $rowHDH=$queryHDH->execute()->fetchAll();

      $queryNT = db_select(OLDBASE.'.field_data_field_select_the_newsletters', 'nt');
      $queryNT->addField('nt', 'field_select_the_newsletters_value');
      $queryNT->condition('nt.entity_type', 'user', '='); 
      $queryNT->condition('nt.entity_id', $row->uid, '=');  
      $rowNT=$queryNT->execute()->fetchAll();

      $queryLN = db_select(OLDBASE.'.field_data_field_last_name', 'ln');
      $queryLN->addField('ln', 'field_last_name_value');
      $queryLN->condition('ln.entity_type', 'user', '='); 
      $queryLN->condition('ln.entity_id', $row->uid, '=');  
      $rowLN=$queryLN->execute()->fetchAll();

      $queryFN = db_select(OLDBASE.'.field_data_field_first_name', 'fn');
      $queryFN->addField('fn', 'field_first_name_value');
      $queryFN->condition('fn.entity_type', 'user', '='); 
      $queryFN->condition('fn.entity_id', $row->uid, '=');  
      $rowFN=$queryFN->execute()->fetchAll();

      $queryETN = db_select(OLDBASE.'.field_data_field_aum_invested_in_Drupals_etns', 'etn');
      $queryETN->addField('etno', 'name', 'Drupalsetns');
      $queryETN->leftJoin(OLDBASE.'.taxonomy_term_data', 'etno', 'etno.tid=etn.field_aum_invested_in_Drupals_etns_tid');
      $queryETN->condition('etn.entity_type', 'user', '='); 
      $queryETN->condition('etn.entity_id', $row->uid, '=');  
      $rowETN=$queryETN->execute()->fetchAll();

      $queryCRM = db_select(OLDBASE.'.field_data_field_crm_id', 'crm');
      $queryCRM->addField('crm', 'field_crm_id_value');
      $queryCRM->condition('crm.entity_type', 'user', '='); 
      $queryCRM->condition('crm.entity_id', $row->uid, '=');  
      $rowCRM=$queryCRM->execute()->fetchAll();

      $queryPP = db_select(OLDBASE.'.field_data_field_preferred_prefix', 'pp');
      $queryPP->addField('pp', 'field_preferred_prefix_value');
      $queryPP->condition('pp.entity_type', 'user', '='); 
      $queryPP->condition('pp.entity_id', $row->uid, '=');  
      $rowPP=$queryPP->execute()->fetchAll();

      $queryCE = db_select(OLDBASE.'.field_data_field_do_you_have_a_continuing_e', 'ce');
      $queryCE->addField('ce', 'field_do_you_have_a_continuing_e_value');
      $queryCE->condition('ce.entity_type', 'user', '='); 
      $queryCE->condition('ce.entity_id', $row->uid, '=');  
      $rowCE=$queryCE->execute()->fetchAll();

      $queryCFP = db_select(OLDBASE.'.field_data_field_cfp', 'cfp');
      $queryCFP->addField('cfp', 'field_cfp_value');
      $queryCFP->condition('cfp.entity_type', 'user', '='); 
      $queryCFP->condition('cfp.entity_id', $row->uid, '=');  
      $rowCFP=$queryCFP->execute()->fetchAll();

      $queryCMA = db_select(OLDBASE.'.field_data_field_cima', 'cma');
      $queryCMA->addField('cma', 'field_cima_value');
      $queryCMA->condition('cma.entity_type', 'user', '='); 
      $queryCMA->condition('cma.entity_id', $row->uid, '=');  
      $rowCMA=$queryCMA->execute()->fetchAll();

      $queryCFA = db_select(OLDBASE.'.field_data_field_cfa', 'cfa');
      $queryCFA->addField('cfa', 'field_cfa_value');
      $queryCFA->condition('cfa.entity_type', 'user', '='); 
      $queryCFA->condition('cfa.entity_id', $row->uid, '=');  
      $rowCFA=$queryCFA->execute()->fetchAll();

      $queryFA = db_select(OLDBASE.'.field_data_field_are_you_a_financial_advise', 'fa');
      $queryFA->addField('fa', 'field_are_you_a_financial_advise_value');
      $queryFA->condition('fa.entity_type', 'user', '='); 
      $queryFA->condition('fa.entity_id', $row->uid, '=');  
      $rowFA=$queryFA->execute()->fetchAll();

      $queryJT = db_select(OLDBASE.'.field_data_field_job_title', 'jt');
      $queryJT->addField('jt', 'field_job_title_value');
      $queryJT->condition('jt.entity_type', 'user', '='); 
      $queryJT->condition('jt.entity_id', $row->uid, '=');  
      $rowJT=$queryJT->execute()->fetchAll();

      if(current($rowJT)!== false){
        $newuser['field_job_title'] = array(LANGUAGE_NONE => array(array('value' => current($rowJT)->field_job_title_value))); 
      }

      if(current($rowFA)!== false){
        $newuser['field_are_you_a_financial_advise'] = array(LANGUAGE_NONE => array(array('value' => current($rowFA)->field_are_you_a_financial_advise_value))); 
      }

      if(current($rowCFA)!== false){
        $newuser['field_cfa'] = array(LANGUAGE_NONE => array(array('value' => current($rowCFA)->field_cfa_value))); 
      }

      if(current($rowCMA)!== false){
        $newuser['field_cima'] = array(LANGUAGE_NONE => array(array('value' => current($rowCMA)->field_cima_value))); 
      }

      if(current($rowCFP)!== false){
        $newuser['field_cfp'] = array(LANGUAGE_NONE => array(array('value' => current($rowCFP)->field_cfp_value))); 
      }

      if(current($rowCE)!== false){
        $newuser['field_do_you_have_a_continuing_e'] = array(LANGUAGE_NONE => array(array('value' => current($rowCE)->field_do_you_have_a_continuing_e_value))); 
      }

      if(current($rowPP)!== false){
        $newuser['field_preferred_prefix'] = array(LANGUAGE_NONE => array(array('value' => current($rowPP)->field_preferred_prefix_value))); 
      }

      if(current($rowCRM)!== false){
        $newuser['field_crm_id'] = array(LANGUAGE_NONE => array(array('value' => current($rowCRM)->field_crm_id_value))); 
      }

      if(current($rowFN)!== false){
        $newuser['field_first_name'] = array(LANGUAGE_NONE => array(array('value' => current($rowFN)->field_first_name_value))); 
      }

      if(current($rowLN)!== false){
        $newuser['field_last_name'] = array(LANGUAGE_NONE => array(array('value' => current($rowLN)->field_last_name_value))); 
      }

     if(current($rowPN)!== false){
        $newuser['field_phone_number'] = array(LANGUAGE_NONE => array(array('value' => current($rowPN)->field_phone_number_value))); 
      }

      if(current($rowAO)!== false){
        $newuser['field_address_1'] = array(LANGUAGE_NONE => array(array('value' => current($rowAO)->field_address_1_value))); 
      }

      if(current($rowAT)!== false){
        $newuser['field_address_2'] = array(LANGUAGE_NONE => array(array('value' => current($rowAT)->field_address_2_value))); 
      }

      if(current($rowCT)!== false){
        $newuser['field_city'] = array(LANGUAGE_NONE => array(array('value' => current($rowCT)->field_city_value))); 
      }

      if(current($rowST)!== false){
        $newuser['field_state'] = array(LANGUAGE_NONE => array(array('value' => current($rowST)->field_state_value))); 
      }

      if(current($rowZPC)!== false){
        $newuser['field_zip_postal_code'] = array(LANGUAGE_NONE => array(array('value' => current($rowZPC)->field_zip_postal_code_value))); 
      }

      if(current($rowCR)!== false){
        $newuser['field_country_region_icw'] = array(LANGUAGE_NONE => array(array('value' => current($rowCR)->field_country_region_icw_value))); 
      }

      if(current($rowCM)!== false){
        $newuser['field_company'] = array(LANGUAGE_NONE => array(array('value' => current($rowCM)->field_company_value))); 
      }

           
      if(current($rowPBA)!== false){
        $PBATermId = taxonomy_get_term_by_name(current($rowPBA)->pbactivity,'Drupal_primary_business_activity'); 

        if($PBATermId!==false){
          $newPBA = array(LANGUAGE_NONE => array(array('tid' => current($PBATermId)->tid)));
          $newuser['field_primary_business_activity']=$newPBA;
        } 
      }

      if(current($rowAUM)!== false){
        $PBATermId = taxonomy_get_term_by_name(current($rowAUM)->aumanagement,'Drupal_assets_under_management'); 

        if($PBATermId!==false){
          $newPBA = array(LANGUAGE_NONE => array(array('tid' => current($PBATermId)->tid)));
          $newuser['field_assets_under_management']=$newPBA;
        } 
      }

      if(current($rowICS)!== false){
        $PBATermId = taxonomy_get_term_by_name(current($rowICS)->icsource,'Drupal_income_source'); 

        if($PBATermId!==false){
          $newPBA = array(LANGUAGE_NONE => array(array('tid' => current($PBATermId)->tid)));
          $newuser['field_income_source']=$newPBA;
        } 
      }

      if(current($rowHDH)!== false){
        $PBATermId = taxonomy_get_term_by_name(current($rowHDH)->hdhear,'Drupal_how_did_you_hear_about_the_conference_'); 

        if($PBATermId!==false){
          $newPBA = array(LANGUAGE_NONE => array(array('tid' => current($PBATermId)->tid)));
          $newuser['field_how_did_you_hear_about_the']=$newPBA;
        } 
      }

      if(current($rowETN)!== false){
        $PBATermId = taxonomy_get_term_by_name(current($rowETN)->Drupalsetns,'Drupal_aum_invested_in_Drupals_etns'); 

        if($PBATermId!==false){
          $newPBA = array(LANGUAGE_NONE => array(array('tid' => current($PBATermId)->tid)));
          $newuser['field_aum_invested_in_Drupals_etns']=$newPBA;
        } 
      }

      if(count($rowNT)>0){
        $ban1=0;
        $ban2=0;
        $ban3=0;
        foreach($rowNT as $nlt){
          if($nlt->field_select_the_newsletters_value=="Drupal News Daily"){
            $ban1=1;
          }
          elseif($nlt->field_select_the_newsletters_value=="Drupal News Weekly"){
            $ban2=1;
          }
          elseif($nlt->field_select_the_newsletters_value=="Drupal Watch"){
            $ban3=1;
          }
        }
        if($ban1==1 && $ban2==1 && $ban3==1){
          $newletter = array(
            array('value' => "Drupal News Daily"),
            array('value' => "Drupal News Weekly" ),
            array('value' => "Drupal Watch" ),
          );
        }
        if($ban1==1 && $ban2==0 && $ban3==1){
          $newletter = array(
            array('value' => "Drupal News Daily"),
            array('value' => "Drupal Watch" ),
          );
        }
        if($ban1==1 && $ban2==1 && $ban3==0){
          $newletter = array(
            array('value' => "Drupal News Daily"),
            array('value' => "Drupal News Weekly" ),
          );
        }
        if($ban1==0 && $ban2==1 && $ban3==1){
          $newletter = array(
            array('value' => "Drupal News Weekly" ),
            array('value' => "Drupal Watch" ),
          );
        }
        if($ban1==1 && $ban2==0 && $ban3==0){
          $newletter = array(
            array('value' => "Drupal News Daily"),
          );
        }
        if($ban1==0 && $ban2==1 && $ban3==0){
          $newletter = array(
            array('value' => "Drupal News Weekly" ),
          );
        }
        if($ban1==0 && $ban2==0 && $ban3==1){
          $newletter = array(
            array('value' => "Drupal Watch" ),
          );
        }
        $newuser['field_select_the_newsletters'] = array(LANGUAGE_NONE => $newletter);
      }

      $user = user_save($existing, $newuser); //register user in drupal

    }
 
  public function prepareRow($current_row) {
    $source_id = $current_row->uid;
    $query = db_select(OLDBASE.'.users_roles', 'r')
      ->fields('r', array('uid', 'rid'))
      ->condition('r.uid', $source_id, '=');
    $results = $query->execute();
    $roles = array('2' => '2');
    foreach ($results as $row) {
      $roles[$row->rid] = $row->rid;
    }
    $current_row->roles = $roles;
    return TRUE;
    // return FALSE if you wish to skip a particular row
  }

}


class DrupalUsersMigrationDelete extends Migration {
  public function __construct($arguments) {
    parent::__construct($arguments);
    $this->description = t('Migrate Drupal users');
 
    $source_fields = array(
      'uid' => t('User ID'),
      'roles' => t('The set of roles assigned to a user.'),
    );
 

    $query = db_select(OLDBASE.'.users', 'u');
      $query->fields('u', array('uid', 'name', 'pass', 'mail', 'created', 'access', 'login', 'status', 'init'));
      $query->addField('un', 'uid', 'uidn');
      $query->leftJoin('.users', 'un', 'un.name=u.name');
      $query->condition('u.name', array('admin', 'rgates'), 'NOT IN');
      $query->condition('u.uid', 0, '>');
      $query->condition('u.name', 'frontend', '!=');
      $query->range(1,1);

    $this->source = new MigrateSourceSQL($query, $source_fields);
    $this->destination = new MigrateDestinationUser();

    $this->map = new MigrateSQLMap($this->machineName,
      array(
        'uid' => array(
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'description' => 'D6 Unique User ID',
          'alias' => 'u',
        )
      ),
      MigrateDestinationUser::getKeySchema()
    );
    //$this->addFieldMapping('uid', 'uidn');
  }

  public function prepareRow($current_row) {
      // Delete Users ---------------------------------------------
      $query = db_select('.users', 'u');
      $query->fields('u', array('uid', 'name'));
      $query->condition('u.uid', 0, '!=');
      $query->condition('u.uid', 1, '!=');
      $query->condition('u.uid', 9, '!=');
      $query->condition('u.uid', 10, '!=');
      $userArray = $query->execute()->fetchAll();

      foreach ($userArray as $userRow) {

        user_delete($userRow->uid);

      }
      // -----------------------------------------------------------------------------------------------------------------
  }

}
